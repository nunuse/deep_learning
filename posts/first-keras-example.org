#+BEGIN_COMMENT
.. title: First Keras Example
.. slug: first-keras-example
.. date: 2017-11-13 15:11:50 UTC-08:00
.. tags: keras
.. category: 
.. link: 
.. description: A keras hello world.
.. type: text
#+END_COMMENT

* Nutshell
  Keras is a neural network library that allows the user to specify different backends (theano, keras, cntk). It's main structure is the *model* which organizes *layers*. The simplest model is the *Sequential* model which organizes the layers into a linear sequence.
* Import
#+BEGIN_SRC ipython :session keras :results none
from keras.layers import Dense
from keras.models import Sequential
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
#+END_SRC
* Make a model
#+BEGIN_SRC ipython :session keras :results none
model = Sequential()
#+END_SRC
* Stack some dense layers using =add=

#+BEGIN_SRC ipython :session keras :results none
model.add(Dense(units=64, activation="relu", input_shape=(112, 4)))
model.add(Dense(units=10, activation="softmax"))
#+END_SRC
* Compile the model
#+BEGIN_SRC ipython :session keras :results none
model.compile(loss="categorical_crossentropy",
              optimizer="sgd",
              metrics=["accuracy"])
#+END_SRC
* Train the model
#+BEGIN_SRC ipython :session keras :results none
data, target = load_iris(return_X_y=True)
X_train, X_test, y_train, y_test = train_test_split(data, target)
#+END_SRC

#+BEGIN_SRC ipython :session keras :results none
model.fit(X_train, y_train)
#+END_SRC
